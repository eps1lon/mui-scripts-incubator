// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`chromium / 1`] = `
<WebArea>
  Material-UI: A popular React UI framework
  <link>Skip to content</link>
  <button>Open main navigation</button>
  <combobox autocomplete="list" haspopup="listbox">
    Search
  </combobox>
  <combobox description="Change language" haspopup="menu">
    Change language
  </combobox>
  <combobox description="Toggle notifications panel" haspopup="menu">
    Toggle notifications panel
  </combobox>
  <link description="Edit website colors">Edit website colors</link>
  <link description="GitHub repository">GitHub repository</link>
  <button description="Toggle light/dark theme">Toggle light/dark theme</button>
  <button description="Toggle right-to-left/left-to-right">
    Toggle right-to-left/left-to-right
  </button>
  <main>
    <heading level="1">MATERIAL-UI</heading>
    <text>
      React components for faster and easier web development. Build your own
      design system, or start with Material Design.
    </text>
    <link>GET STARTED</link>
    <link>Star</link>
    <link>Follow</link>
    <link>Get Professional Support</link>
    <text>random sponsor</text>
    <link>a random quick word</link>
    <heading level="2">Installation</heading>
    <text>
      Install Material-UI's source files via npm. We take care of injecting
      the CSS needed.$ npm install @material-ui/core
    </text>
    <link>or use a CDN.</link>
    <text>
      Load the default Roboto
      font.<linkrel="stylesheet"href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"/>
    </text>
    <link>READ INSTALLATION DOCS</link>
    <heading level="2">Usage</heading>
    <text>
      Material-UI components work without any additional setup, and don't
      pollute the global
      scope.importReactfrom'react';import{Button}from'@material-ui/core';functionApp(){return<Buttoncolor="primary">Hello
      World</Button>;}
    </text>
    <link>EXPLORE THE DOCS</link>
    <heading level="2">Premium themes</heading>
    <text>
      Take your project to the next level with premium themes from our store ‚Äì
      all built on Material-UI.
    </text>
    <link>Browse themes</link>
    <link>BROWSE THEMES</link>
    <heading level="2">Material-UI's sponsors</heading>
    <text>
      The continued development and maintenance of Material-UI is made possible
      by these generous sponsors:
    </text>
    <heading level="3">Diamond üíé</heading>
    <text>3/3 slots available</text>
    <heading level="3">Gold üèÜ</heading>
    <link>tidelift</link>
    <link>bitsrc</link>
    <link>call-em-all</link>
    <heading level="3">There are more!</heading>
    <text>See the full list of</text>
    <link>our sponsors</link>
    <text>
      , and learn how you can contribute to the future of Material-UI.
    </text>
    <heading level="2">Praise for Material-UI</heading>
    <text>Here's what some of our users are saying.</text>
    <link>a random quote about Material-UI</link>
    <link>a random quote about Material-UI</link>
    <link>a random quote about Material-UI</link>
    <heading level="2">Who's using Material-UI?</heading>
    <text>Join these and other great organisations!</text>
    <img>NASA</img>
    <img>Walmart Labs</img>
    <img>Capgemini</img>
    <img>Uniqlo</img>
    <img>Bethesda</img>
    <img>J.P. Morgan</img>
    <img>Shutterstock</img>
    <img>Netflix</img>
    <img>Coursera</img>
    <img>Amazon</img>
    <img>Unity</img>
    <text>Are you using Material-UI?</text>
    <link>LET US KNOW!</link>
  </main>
  <link>Material-UI</link>
  <heading level="2">Community</heading>
  <link>GitHub</link>
  <link>Twitter</link>
  <link>StackOverflow</link>
  <link>Team</link>
  <heading level="2">Resources</heading>
  <link>Support</link>
  <link>Blog</link>
  <link>Material Icons</link>
  <heading level="2">Company</heading>
  <link>About</link>
  <link>Contact Us</link>
  <text>Currently</text>
  <link>v4.9.11. View versions page.</link>
  <text>. Released under the</text>
  <link>MIT License</link>
  <text>.Copyright ¬©2020Material-UI.</text>
</WebArea>;

`;

exports[`chromium /components/selects/ 1`] = `
<WebArea>
  Material-UI: A popular React UI framework
  <link>Skip to content</link>
  <button>Open main navigation</button>
  <combobox autocomplete="list" haspopup="listbox">
    Search
  </combobox>
  <combobox description="Change language" haspopup="menu">
    Change language
  </combobox>
  <combobox description="Toggle notifications panel" haspopup="menu">
    Toggle notifications panel
  </combobox>
  <link description="Edit website colors">Edit website colors</link>
  <link description="GitHub repository">GitHub repository</link>
  <button description="Toggle light/dark theme">Toggle light/dark theme</button>
  <button description="Toggle right-to-left/left-to-right">
    Toggle right-to-left/left-to-right
  </button>
  <main>
    <heading level="1">MATERIAL-UI</heading>
    <text>
      React components for faster and easier web development. Build your own
      design system, or start with Material Design.
    </text>
    <link>GET STARTED</link>
    <link>Star</link>
    <link>Follow</link>
    <link>Get Professional Support</link>
    <text>random sponsor</text>
    <link>a random quick word</link>
    <heading level="2">Installation</heading>
    <text>
      Install Material-UI's source files via npm. We take care of injecting
      the CSS needed.$ npm install @material-ui/core
    </text>
    <link>or use a CDN.</link>
    <text>
      Load the default Roboto
      font.<linkrel="stylesheet"href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"/>
    </text>
    <link>READ INSTALLATION DOCS</link>
    <heading level="2">Usage</heading>
    <text>
      Material-UI components work without any additional setup, and don't
      pollute the global
      scope.importReactfrom'react';import{Button}from'@material-ui/core';functionApp(){return<Buttoncolor="primary">Hello
      World</Button>;}
    </text>
    <link>EXPLORE THE DOCS</link>
    <heading level="2">Premium themes</heading>
    <text>
      Take your project to the next level with premium themes from our store ‚Äì
      all built on Material-UI.
    </text>
    <link>Browse themes</link>
    <link>BROWSE THEMES</link>
    <heading level="2">Material-UI's sponsors</heading>
    <text>
      The continued development and maintenance of Material-UI is made possible
      by these generous sponsors:
    </text>
    <heading level="3">Diamond üíé</heading>
    <text>3/3 slots available</text>
    <heading level="3">Gold üèÜ</heading>
    <link>tidelift</link>
    <link>bitsrc</link>
    <link>call-em-all</link>
    <heading level="3">There are more!</heading>
    <text>See the full list of</text>
    <link>our sponsors</link>
    <text>
      , and learn how you can contribute to the future of Material-UI.
    </text>
    <heading level="2">Praise for Material-UI</heading>
    <text>Here's what some of our users are saying.</text>
    <link>a random quote about Material-UI</link>
    <link>a random quote about Material-UI</link>
    <link>a random quote about Material-UI</link>
    <heading level="2">Who's using Material-UI?</heading>
    <text>Join these and other great organisations!</text>
    <img>NASA</img>
    <img>Walmart Labs</img>
    <img>Capgemini</img>
    <img>Uniqlo</img>
    <img>Bethesda</img>
    <img>J.P. Morgan</img>
    <img>Shutterstock</img>
    <img>Netflix</img>
    <img>Coursera</img>
    <img>Amazon</img>
    <img>Unity</img>
    <text>Are you using Material-UI?</text>
    <link>LET US KNOW!</link>
  </main>
  <link>Material-UI</link>
  <heading level="2">Community</heading>
  <link>GitHub</link>
  <link>Twitter</link>
  <link>StackOverflow</link>
  <link>Team</link>
  <heading level="2">Resources</heading>
  <link>Support</link>
  <link>Blog</link>
  <link>Material Icons</link>
  <heading level="2">Company</heading>
  <link>About</link>
  <link>Contact Us</link>
  <text>Currently</text>
  <link>v4.9.11. View versions page.</link>
  <text>. Released under the</text>
  <link>MIT License</link>
  <text>.Copyright ¬©2020Material-UI.</text>
</WebArea>;

`;

exports[`firefox / 1`] = `
<document>
  Material-UI: A popular React UI framework
  <link>Skip to content</link>
  <button>Open main navigation</button>
  <combobox autocomplete="list" haspopup="true">
    Search
  </combobox>
  <buttonmenu haspopup="true">Change language</buttonmenu>
  <buttonmenu haspopup="true">Toggle notifications panel</buttonmenu>
  <link>Edit website colors</link>
  <link>GitHub repository</link>
  <button>Toggle light/dark theme</button>
  <button>Toggle right-to-left/left-to-right</button>
  <landmark>Main navigation</landmark>
  <landmark>
    <heading level="1">MATERIAL-UI</heading>
    <text>
      React components for faster and easier web development. Build your own
      design system, or start with Material Design.
    </text>
    <link>GET STARTED</link>
    <link>Star</link>
    <link>Follow</link>
    <link>Get Professional Support</link>
    <text>random sponsor</text>
    <link>a random quick word</link>
    <heading level="2">Installation</heading>
    <text>
      Install Material-UI's source files via npm. We take care of injecting
      the CSS needed.$ npm install @material-ui/core
    </text>
    <link>or use a CDN.</link>
    <text>Load the default Roboto font.</text>
    <text-container>
      <text>
        <linkrel="stylesheet"href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"/>
      </text>
    </text-container>
    <link>READ INSTALLATION DOCS</link>
    <heading level="2">Usage</heading>
    <text>
      Material-UI components work without any additional setup, and don't
      pollute the global scope.import React from'react';import{
      Button
      }from'@material-ui/core';functionApp(){return<Buttoncolor="primary">Hello
      World</Button>;}
    </text>
    <link>EXPLORE THE DOCS</link>
    <heading level="2">Premium themes</heading>
    <text>
      Take your project to the next level with premium themes from our store ‚Äì
      all built on Material-UI.
    </text>
    <link>Browse themes</link>
    <link>BROWSE THEMES</link>
    <heading level="2">Material-UI's sponsors</heading>
    <text>
      The continued development and maintenance of Material-UI is made possible
      by these generous sponsors:
    </text>
    <heading level="3">Diamond üíé</heading>
    <text>3/3 slots available</text>
    <heading level="3">Gold üèÜ</heading>
    <link>tidelift</link>
    <link>bitsrc</link>
    <link>call-em-all</link>
    <heading level="3">There are more!</heading>
    <text>See the full list of</text>
    <link>our sponsors</link>
    <text>
      , and learn how you can contribute to the future of Material-UI.
    </text>
    <heading level="2">Praise for Material-UI</heading>
    <text>Here's what some of our users are saying.</text>
    <link>a random quote about Material-UI</link>
    <link>a random quote about Material-UI</link>
    <link>a random quote about Material-UI</link>
    <heading level="2">Who's using Material-UI?</heading>
    <text>Join these and other great organisations!</text>
    <img>NASA</img>
    <img>Walmart Labs</img>
    <img>Capgemini</img>
    <img>Uniqlo</img>
    <img>Bethesda</img>
    <img>J.P. Morgan</img>
    <img>Shutterstock</img>
    <img>Netflix</img>
    <img>Coursera</img>
    <img>Amazon</img>
    <img>Unity</img>
    <text>Are you using Material-UI?</text>
    <link>LET US KNOW!</link>
  </landmark>
  <link>Material-UI</link>
  <heading level="2">Community</heading>
  <link>GitHub</link>
  <link>Twitter</link>
  <link>StackOverflow</link>
  <link>Team</link>
  <heading level="2">Resources</heading>
  <link>Support</link>
  <link>Blog</link>
  <link>Material Icons</link>
  <heading level="2">Company</heading>
  <link>About</link>
  <link>Contact Us</link>
  <text>Currently</text>
  <link>v4.9.11. View versions page.</link>
  <text>. Released under the</text>
  <link>MIT License</link>
  <text>. Copyright ¬© 2020 Material-UI.</text>
</document>;

`;

exports[`firefox /components/selects/ 1`] = `
<landmark>
  <link>EDIT THIS PAGE</link>
  <heading level="1">Select</heading>
  <text>
    Select components are used for collecting user provided information from a
    list of options.
  </text>
  <heading level="2">Simple Select</heading>
  <text>
    Menus are positioned over their emitting elements such that the currently
    selected menu item appears on top of the emitting element.
  </text>
  <section>
    <text>Age</text>
    <button haspopup="true">Age ‚Äã</button>
    <text>Age</text>
    <button haspopup="true">Age ‚Äã</button>
    <text>Some important helper text</text>
    <button haspopup="true">Without label</button>
    <text>Without labelAge</text>
    <button haspopup="true">Age None</button>
    <text>Label + placeholderName</text>
    <button disabled="true" haspopup="true">
      Name ‚Äã
    </button>
    <text>DisabledName</text>
    <button haspopup="true">Name ‚Äã</button>
    <text>ErrorName</text>
    <button haspopup="true">Name ‚Äã</button>
    <text>Read onlyAge</text>
    <button haspopup="true">Age ‚Äã</button>
    <text>Auto width</text>
    <button haspopup="true">Without label</button>
    <text>PlaceholderAge*</text>
    <button haspopup="true">Age ‚Äâ* ‚Äã</button>
    <text>RequiredAge</text>
    <button haspopup="true">Age ‚Äã</button>
    <text>Age</text>
    <button haspopup="true">Age ‚Äã</button>
  </section>
  <button>Show the source</button>
  <button>Edit in CodeSandbox</button>
  <button>Copy the source</button>
  <button>Reset demo</button>
  <buttonmenu haspopup="true">See more</buttonmenu>
  <heading level="2">Advanced features</heading>
  <text>
    The Select component is meant to be interchangeable with a native
    <select> element.If you are looking for more advanced features, like
    combobox, multiselect, autocomplete, async or creatable support, head to the
  </text>
  <link>Autocomplete component</link>
  <text>
    . It's meant to be an improved version of the "react-select"
    and "downshift" packages.
  </text>
  <heading level="2">Native Select</heading>
  <text>
    As the user experience can be improved on mobile using the native select of
    the platform, we allow such pattern.
  </text>
  <section>
    <text>Age</text>
    <combobox value="None" haspopup="true">
      Age
      <option selected="true">None</option>
      <option>Ten</option>
      <option>Twenty</option>
      <option>Thirty</option>
    </combobox>
    <text>Age</text>
    <combobox value="None" haspopup="true">
      Age
      <option selected="true">None</option>
      <option>Ten</option>
      <option>Twenty</option>
      <option>Thirty</option>
    </combobox>
    <text>Some important helper text</text>
    <combobox value="None" haspopup="true">
      age
      <option selected="true">None</option>
      <option>Ten</option>
      <option>Twenty</option>
      <option>Thirty</option>
    </combobox>
    <text>With visually hidden labelAge</text>
    <combobox value="None" haspopup="true">
      Age
      <option selected="true">None</option>
      <option>Ten</option>
      <option>Twenty</option>
      <option>Thirty</option>
    </combobox>
    <text>Label + placeholderName</text>
    <combobox value="Hai" disabled="true" haspopup="true">
      Name
      <option>None</option>
      <option selected="true">Hai</option>
      <option level="2">Olivier</option>
      <option level="2">Kevin</option>
    </combobox>
    <text>DisabledName</text>
    <combobox value="Hai" haspopup="true" invalid="true">
      Name
      <option selected="true">Hai</option>
      <option level="2">Olivier</option>
      <option level="2">Kevin</option>
    </combobox>
    <text>ErrorName</text>
    <combobox value="Thirty" haspopup="true">
      Name
      <option>Ten</option>
      <option>Twenty</option>
      <option selected="true">Thirty</option>
    </combobox>
    <text>Uncontrolled</text>
    <combobox value="Placeholder" haspopup="true">
      age
      <option disabled="true" selected="true">
        Placeholder
      </option>
      <option>Ten</option>
      <option>Twenty</option>
      <option>Thirty</option>
    </combobox>
    <text>PlaceholderAge*</text>
    <combobox value="None" required="true" haspopup="true" invalid="true">
      Age ‚Äâ*
      <option selected="true">None</option>
      <option>Ten</option>
      <option>Twenty</option>
      <option>Thirty</option>
    </combobox>
    <text>RequiredAge</text>
    <combobox value="None" haspopup="true">
      Age
      <option selected="true">None</option>
      <option>Ten</option>
      <option>Twenty</option>
      <option>Thirty</option>
    </combobox>
    <text>Age</text>
    <combobox value="None" haspopup="true">
      Age
      <option selected="true">None</option>
      <option>Ten</option>
      <option>Twenty</option>
      <option>Thirty</option>
    </combobox>
  </section>
  <button>Show the source</button>
  <button>Edit in CodeSandbox</button>
  <button>Copy the source</button>
  <button>Reset demo</button>
  <buttonmenu haspopup="true">See more</buttonmenu>
  <heading level="2">Text Fields</heading>
  <text>
    The TextField wrapper component is a complete form control including a
    label, input and help text. You can find an example with the select mode
  </text>
  <link>in this section</link>
  <text>.</text>
  <heading level="2">Customized selects</heading>
  <text>
    Here are some examples of customizing the component. You can learn more
    about this in the
  </text>
  <link>overrides documentation page</link>
  <text>
    .The first step is to style the InputBase component. Once it's styled,
    you can either use it directly as a text field or provide it to the select
    input property to have a select field.
  </text>
  <section>
    <text>Age</text>
    <textbox>Age</textbox>
    <text>Age</text>
    <button haspopup="true">Age ‚Äã</button>
    <text>Age</text>
    <combobox value="None" haspopup="true">
      Age
      <option selected="true">None</option>
      <option>Ten</option>
      <option>Twenty</option>
      <option>Thirty</option>
    </combobox>
  </section>
  <button>Show the source</button>
  <button>Edit in CodeSandbox</button>
  <button>Copy the source</button>
  <button>Reset demo</button>
  <buttonmenu haspopup="true">See more</buttonmenu>
  <heading level="2">Multiple Select</heading>
  <text>
    The Select component can handle multiple selections. It's enabled with
    the multiple property.Like with the single selection, you can pull out the
    new value by accessing event.target.value in the onChange callback.
    It's always an array.
  </text>
  <section>
    <text>Name</text>
    <button haspopup="true">Name ‚Äã</button>
    <text>Tag</text>
    <button haspopup="true">Tag ‚Äã</button>
    <text>Chip</text>
    <button haspopup="true">Chip ‚Äã</button>
    <button haspopup="true">Without label</button>
    <text>Native</text>
    <listbox multiselectable="true">
      Native
      <option>Oliver Hansen</option>
      <option>Van Henry</option>
      <option>April Tucker</option>
      <option>Ralph Hubbard</option>
      <option>Omar Alexander</option>
      <option>Carlos Abbott</option>
      <option>Miriam Wagner</option>
      <option>Bradley Wilkerson</option>
      <option>Virginia Andrews</option>
      <option>Kelly Snyder</option>
    </listbox>
  </section>
  <button>Show the source</button>
  <button>Edit in CodeSandbox</button>
  <button>Copy the source</button>
  <button>Reset demo</button>
  <buttonmenu haspopup="true">See more</buttonmenu>
  <heading level="2">Controlled Open Select</heading>
  <section>
    <button>OPEN THE SELECT</button>
    <text>Age</text>
    <button haspopup="true">Age ‚Äã</button>
  </section>
  <button>Show the source</button>
  <button>Edit in CodeSandbox</button>
  <button>Copy the source</button>
  <button>Reset demo</button>
  <buttonmenu haspopup="true">See more</buttonmenu>
  <heading level="2">With a Dialog</heading>
  <text>
    While it's discouraged by the Material Design specification, you can
    use a select inside a dialog.
  </text>
  <section>
    <button>OPEN SELECT DIALOG</button>
  </section>
  <button>Show the source</button>
  <button>Edit in CodeSandbox</button>
  <button>Copy the source</button>
  <button>Reset demo</button>
  <buttonmenu haspopup="true">See more</buttonmenu>
  <heading level="2">Grouping</heading>
  <text>
    Display categories with the ListSubheader component or the native
    <optgroup> element.
  </text>
  <section>
    <text>Grouping</text>
    <combobox value="None" haspopup="true">
      Grouping
      <option selected="true">None</option>
      <option level="2">Option 1</option>
      <option level="2">Option 2</option>
      <option level="2">Option 3</option>
      <option level="2">Option 4</option>
    </combobox>
    <text>Grouping</text>
    <button haspopup="true">‚Äã</button>
  </section>
  <button>Show the source</button>
  <button>Edit in CodeSandbox</button>
  <button>Copy the source</button>
  <button>Reset demo</button>
  <buttonmenu haspopup="true">See more</buttonmenu>
  <heading level="2">Accessibility</heading>
  <text>
    To properly label your Select input you need an extra element with an id
    that contains a label. That id needs to match the labelId of the Select
    e.g.<InputLabelid="label">Age</InputLabel><SelectlabelId="label"id="select"value="20"><MenuItemvalue="10">Ten</MenuItem><MenuItemvalue="20">Twenty</MenuItem></Select>Alternatively
    a TextField with an id and label creates the proper markup and ids for
    you:<TextFieldid="select"label="Age"value="20"select><MenuItemvalue="10">Ten</MenuItem><MenuItemvalue="20">Twenty</MenuItem></TextField>
  </text>
  <heading level="2">API</heading>
  <statictext>‚Ä¢</statictext>
  <link><NativeSelect /></link>
  <statictext>‚Ä¢</statictext>
  <link><Select /></link>
  <link>Radio</link>
  <link>Slider</link>
</landmark>;

`;
