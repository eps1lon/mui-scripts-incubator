# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

pool:
  vmImage: "windows-latest"

variables:
  NVDA_LOG_FILE_PATH: '$(Build.SourcesDirectory)\lib\a11y-snapshot\nvda.log'
  PLAYWRIGHT_CACHE_FOLDER: '$(UserProfile)\AppData\Local\ms-playwright'
  YARN_CACHE_FOLDER: '$(Pipeline.Workspace)\.yarn'

steps:
  - powershell: |
      # Set empty so that publishing the artifact doesn't fail if we haven't run NVDA yet.
      Set-Content -Path '${{ variables.NVDA_LOG_FILE_PATH }}' -Value ''
    displayName: setup

  - task: NodeTool@0
    inputs:
      versionSpec: "12.x"
    displayName: "Install Node.js"

  - task: Cache@2
    inputs:
      key: 'yarn-v2 | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        yarn-v2 | "$(Agent.OS)"
        yarn-v2
      path: $(YARN_CACHE_FOLDER)
    displayName: Cache Yarn packages

  - task: Cache@2
    inputs:
      key: 'playwright | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        playwright | "$(Agent.OS)"
      path: $(PLAYWRIGHT_CACHE_FOLDER)
    displayName: Cache Playwright browser binaries

  - script: |
      yarn install
    displayName: "install dependencies"

  - script: |
      node bin/env.js
    displayName: Check environment

  - script: |
      yarn format:check
    displayName: "check code style"

  - script: |
      yarn lint
    displayName: "check code semantics"

  - powershell: |
      $REPO_PATH = "$(Build.SourcesDirectory)"
      $LOG_FILE_PATH = "${{ variables.NVDA_LOG_FILE_PATH }}"
      $NVDA_VENDOR = "$REPO_PATH\node_modules\screen-reader-testing-library\nvda"
      $NVDA_BIN = "$NVDA_VENDOR\portable\nvda.exe"
      & $NVDA_BIN --log-file=$LOG_FILE_PATH --config-path=$NVDA_VENDOR\settings
      yarn a11y-snapshot --ci --runInBand
      & $NVDA_BIN -q
    displayName: "test"

  - publish: ${{ variables.NVDA_LOG_FILE_PATH }}
    artifact: nvda.log
    condition: always()
